import { createSpecializedBuilder } from '@commercetools-test-data/core';
import { graphqlGenerator, restGenerator } from './generators';
import { TCreateOrderBuilder, TOrderGraphql, TOrderRest } from './types';

export const RestModelBuilder: TCreateOrderBuilder<TOrderRest> = () =>
  createSpecializedBuilder({
    generator: restGenerator,
    type: 'rest',
    buildFields: [
      'customerGroup',
      'businessUnit',
      'store',
      'lineItems',
      'customLineItems',
      'taxedShippingPrice',
      'discountOnTotalPrice',
      'billingAddress',
      'shippingAddress',
      'shippingInfo',
      'shippingRateInput',
      'shippingCustomFields',
      'shipping',
      'totalPrice',
      'itemShippingAddresses',
      'discountCodes',
      'directDiscounts',
      'refusedGifts',
      'paymentInfo',
      'cart',
      'quote',
      'state',
      'returnInfo',
      'custom',
      'createdBy',
      'lastModifiedBy',
    ],
  });

export const GraphqlModelBuilder: TCreateOrderBuilder<TOrderGraphql> = () =>
  createSpecializedBuilder({
    generator: graphqlGenerator,
    type: 'graphql',
    buildFields: [
      'customerGroup',
      'customerGroupRef',
      'businessUnit',
      'businessUnitRef',
      'store',
      'storeRef',
      'lineItems',
      'customLineItems',
      'taxedShippingPrice',
      'discountOnTotalPrice',
      'billingAddress',
      'shippingAddress',
      'shippingInfo',
      'shippingRateInput',
      'shippingCustomFields',
      'shipping',
      'totalPrice',
      'itemShippingAddresses',
      'discountCodes',
      'directDiscounts',
      'refusedGifts',
      'refusedGiftsRefs',
      'paymentInfo',
      'cart',
      'cartRef',
      'quote',
      'quoteRef',
      'state',
      'stateRef',
      'returnInfo',
      'custom',
      'createdBy',
      'lastModifiedBy',
    ],
  });
